rules_version = '2';
service firebase.storage {
	match /b/{bucket}/o {
		function isSignedIn() { return request.auth != null; }
		function isSelf(uid) { return isSignedIn() && request.auth.uid == uid; }

		// User avatars: stored at avatars/{uid}.jpg
		// Note: cannot use a placeholder with a suffix in the match path.
		match /avatars/{filename} {
			allow read: if true; // publicly readable avatars
			allow write: if isSignedIn() && (
				filename == (request.auth.uid + '.jpg') ||
				filename == (request.auth.uid + '.png')
			) && (
				request.resource != null && (
					request.resource.contentType == 'image/jpeg' ||
					request.resource.contentType == 'image/png'
				)
			);
		}

		// Optional: user-scoped folder if you decide to store per-user subpaths
		match /users/{userId}/{allPaths=**} {
			allow read, write: if isSelf(userId);
		}

		// Deny everything else
		match /{allPaths=**} {
			allow read, write: if false;
		}
	}
}
